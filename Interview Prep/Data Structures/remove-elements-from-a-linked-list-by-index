function LinkedList() {
  var length = 0;
  var head = null;

  var Node = function(element){ // {1}
    this.element = element;
    this.next = null;
  };

  this.size = function(){
    return length;
  };

  this.head = function(){
    return head;
  };

  this.add = function(element){
    var node = new Node(element);
    if(head === null){
        head = node;
    } else {
        var currentNode = head;

        while(currentNode.next){
            currentNode  = currentNode.next;
        }

        currentNode.next = node;
    }

    length++;
  };
// yesterday
// 20 30 50 100
// remove 50
// 20 30 100
// today
// 20 30 50 100
// remove 1
//20 50 100 60
// 0
// agenda
// traverse from  head to index
  // Only change code below this line
this.removeAt = function(indexOf){
  if(indexOf < 0){
    return null;
  } else {
    if(indexOf >= length){
     return null 
    }
    else
    {
      var currentnode = head;
      var prev = currentnode;
      var indexincr = 0;
      if(indexOf == 0){
     head = currentnode.next  
      } 
      else {
        // curr = 20
        // prev =20
        // indexof = 2
        //20 50 100 60
        while(indexincr < indexOf){
          indexincr++;
          prev= currentnode; // 20 50
          currentnode = currentnode.next;//50 100

        }
    prev.next = currentnode.next

      }
      length--;
      return currentnode.element
    }
  }

}
  // Only change code above this line
}
